// <copyright file="ParserParametersXPathCustomFields.cs" company="DECTech.Tokyo">
// Copyright (c) DECTech.Tokyo. All rights reserved.
// </copyright>

/*
 * Crawler API
 *
 * API for crawling web pages and searching in crowled result
 *
 * OpenAPI spec version: 1.0.0
 * Contact: zakhar_amirov@dectech.tokyo
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace CrawlerLib.Azure
{
    using System.Runtime.Serialization;
    using System.Text;
    using Data;
    using JetBrains.Annotations;
    using Newtonsoft.Json;

    /// <summary>
    /// Metadata name and XPath for custom parsing.
    /// </summary>
    [DataContract]
    [UsedImplicitly]
    public class ParserParametersXPathCustomFields : IParserParametersXPathCustomFields
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParserParametersXPathCustomFields"/> class.
        /// </summary>
        /// <param name="name">Field name.</param>
        /// <param name="xpath">Xpath for parsing.</param>
        [JsonConstructor]
        public ParserParametersXPathCustomFields(
            [JsonProperty("name")] string name,
            [JsonProperty("xpath")] string xpath)
        {
            Name = name;
            XPath = xpath;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ParserParametersXPathCustomFields" /> class.
        /// </summary>
        /// <param name="pair">Pair with field name and value.</param>
        public ParserParametersXPathCustomFields(IParserParametersXPathCustomFields pair)
        {
            Name = pair.Name;
            XPath = pair.XPath;
        }

        /// <summary>
        /// Gets name of schema.org or decode property in URI format
        /// </summary>
        [DataMember(Name = "name")]
        public string Name { get; }

        /// <summary>
        /// Gets xPath expression to extract metadata field from HTML DOM. May include fn:replace and fn:match function for
        /// regular
        /// expressions.
        /// </summary>
        [DataMember(Name = "xpath")]
        public string XPath { get; }

        /// <inheritdoc />
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParserParametersCustomFields {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Xpath: ").Append(XPath).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }
}